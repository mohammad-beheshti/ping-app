/**
 * Generated by @openapi-codegen
 *
 * @version 0.1.2
 */
export type UnauthorizedResponseDto = {
  /*
   * code of the error
   *
   * @example 401
   */
  statusCode: number;
  /*
   * message of the error
   *
   * @example Unauthorized
   */
  message: string;
};

export type ServerErrorResponseDto = {
  /*
   * code of the error
   *
   * @example 500
   */
  statusCode: number;
  /*
   * message of the error
   *
   * @example Internal Server Error
   */
  message: string;
};

export type CreateUserDto = {
  /*
   * Name of the user
   *
   * @example name last-name
   */
  name?: string;
  /*
   * username (should be unique)
   *
   * @example username
   */
  username: string;
  /*
   * user password
   *
   * @example the-password
   */
  password: string;
  /*
   * user roles
   *
   * @example USER
   */
  roles?: "ADMIN" | "USER";
};

export type UserDto = {
  /*
   * Name of the user
   *
   * @example name last-name
   */
  name?: string;
  /*
   * username (should be unique)
   *
   * @example username
   */
  username: string;
  /*
   * user roles
   *
   * @example USER
   */
  roles?: "ADMIN" | "USER";
  /*
   * generated unique id
   */
  id: string;
  /*
   * date of creation
   *
   * @example 2022-07-23T20:48:43.569Z
   */
  createdAt: string;
  /*
   * date of last update
   *
   * @example 2022-07-23T20:48:43.571Z
   */
  updatedAt: string;
};

export type ConflictResponseDto = {
  /*
   * code of the error
   *
   * @example 409
   */
  statusCode: number;
  /*
   * message of the error
   *
   * @example Conflict
   */
  message: string;
};

export type NotFoundResponseDto = {
  /*
   * code of the error
   *
   * @example 404
   */
  statusCode: number;
  /*
   * message of the error
   *
   * @example Not Found
   */
  message: string;
};

export type UpdateUserDto = {
  /*
   * Name of the user
   *
   * @example name last-name
   */
  name?: string;
  /*
   * username (should be unique)
   *
   * @example username
   */
  username?: string;
  /*
   * user password
   *
   * @example the-password
   */
  password?: string;
  /*
   * user roles
   *
   * @example USER
   */
  roles?: "ADMIN" | "USER";
};

export type CreateServerDto = {
  /*
   * IPv4 address of the server
   *
   * @example 8.8.8.8
   */
  ip: string;
  /*
   * port of the server
   *
   * @example 53
   */
  port: number;
  /*
   * amount to wait in milliseconds
   *
   * @example 900
   */
  waitInMs?: number;
  /*
   * list of usernames
   *
   * @example username
   * @example another-username
   */
  usernames?: string[];
};

export type ServerDto = {
  /*
   * IPv4 address of the server
   *
   * @example 8.8.8.8
   */
  ip: string;
  /*
   * port of the server
   *
   * @example 53
   */
  port: number;
  /*
   * amount to wait in milliseconds
   *
   * @example 900
   */
  waitInMs?: number;
  /*
   * generated unique id
   */
  id: string;
  /*
   * date of creation
   *
   * @example 2022-07-23T20:48:43.569Z
   */
  createdAt: string;
  /*
   * date of last update
   *
   * @example 2022-07-23T20:48:43.571Z
   */
  updatedAt: string;
  /*
   * list of users for this server
   *
   * @example {"id":"5f3f8f8f-f8f8-f8f8-f8f8-f8f8f8f8f8f8","name":"name last-name","username":"username","roles":["USER"],"createdAt":"2022-07-23T20:48:43.569Z","updatedAt":"2022-07-23T20:48:43.571Z"}
   */
  users: UserDto[];
};

export type UpdateServerDto = {
  /*
   * IPv4 address of the server
   *
   * @example 8.8.8.8
   */
  ip?: string;
  /*
   * port of the server
   *
   * @example 53
   */
  port?: number;
  /*
   * amount to wait in milliseconds
   *
   * @example 900
   */
  waitInMs?: number;
  /*
   * list of usernames
   *
   * @example username
   * @example another-username
   */
  usernames?: string[];
};

export type LoginDto = {
  /*
   * @example username
   */
  username: string;
  /*
   * @example the-password
   */
  password: string;
};

export type LoginResponseDto = {
  /*
   * JWT token
   */
  access_token: string;
};

export type GetProfileResponseDto = {
  userId: string;
  /*
   * @example admin
   */
  username: string;
  /*
   * @example USER
   */
  roles: ("ADMIN" | "USER")[];
};
